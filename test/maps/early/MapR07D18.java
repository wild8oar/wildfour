package maps.early;
/**
 * Generated on Tue May 30 13:48:50 CEST 2017
 * Max. rounds 7
 * Max. depth 18 (for rounds 1-5: depth=16)
**/

import java.util.HashMap;
import java.util.Map;

public class MapR07D18 {

public static final Map<String, Integer> MAP = new HashMap<>();

static {
MAP.put("000B00E@000000",3);
MAP.put("000B0?0E000000",3);
MAP.put("000B009>000B00",3);
MAP.put("000H000<0B0000",3);
MAP.put("00000H0<000000",3);
MAP.put("0B000B9>000000",3);
MAP.put("0B00009G000000",3);
MAP.put("0B000B0<000B00",3);
MAP.put("00000B0@000000",3);
MAP.put("000B00B=0B0000",3);
MAP.put("000H000<000000",3);
MAP.put("000B00?@000000",3);
MAP.put("0B0B000@000000",3);
MAP.put("000B00B@000000",3);
MAP.put("000B000>000B00",3);
MAP.put("000B0B0<000000",3);
MAP.put("000B000E000000",2);
MAP.put("000B0B09000000",3);
MAP.put("00000H09000000",3);
MAP.put("0B0B009@000000",3);
MAP.put("0B000009000000",3);
MAP.put("0B0B0B0<000000",3);
MAP.put("00000H0<0B0000",3);
MAP.put("00000B0@0B0000",3);
MAP.put("00000B9@0B0000",3);
MAP.put("00000B?>000000",3);
MAP.put("0B000B0>000000",3);
MAP.put("0B00009>0B0000",3);
MAP.put("0B00000@000B00",3);
MAP.put("0H00000<000000",3);
MAP.put("00000B0E09000B",3);
MAP.put("0B0000090B0000",3);
MAP.put("0B00000900000B",3);
MAP.put("0B0000B=000B00",3);
MAP.put("000000?G000000",3);
MAP.put("000H0B0<000000",3);
MAP.put("00000H0E090000",3);
MAP.put("0J00000<000000",0);
MAP.put("0B00000<0B0B00",3);
MAP.put("0B0B000F000000",2);
MAP.put("0H000009000000",3);
MAP.put("0B00009>00000B",3);
MAP.put("0H00000<00000B",3);
MAP.put("0B000000000000",3);
MAP.put("0H00000<0B0000",3);
MAP.put("0B00000F00000B",3);
MAP.put("000B000@000B00",3);
MAP.put("0B0000?>000000",3);
MAP.put("0B000B9@000000",3);
MAP.put("000B0B0>000000",3);
MAP.put("000B0009000B00",3);
MAP.put("000H009@000000",3);
MAP.put("0B00000<000B00",3);
MAP.put("0B0B000<000B00",3);
MAP.put("0B00000?000000",3);
MAP.put("00000H9@000000",3);
MAP.put("0B00000F0B0000",3);
MAP.put("000B009@000B00",3);
MAP.put("0B000H0<000000",3);
MAP.put("00000BB=0B0000",3);
MAP.put("000B090E00000B",3);
MAP.put("0B0B00B=000000",3);
MAP.put("0B000B0@000000",3);
MAP.put("000B090G000000",3);
MAP.put("000B0B9>000000",3);
MAP.put("000B090E0B0000",3);
MAP.put("000J000<000000",1);
MAP.put("0B0H000<000000",3);
MAP.put("00000H0>000000",3);
MAP.put("0B000B0E090000",1);
MAP.put("000B000<0B0000",3);
MAP.put("0B00000>000000",3);
MAP.put("0B0000E@000000",3);
MAP.put("000B0B0<0B0000",3);
MAP.put("00000B?@000000",3);
MAP.put("0000000G000000",3);
MAP.put("0H00009@000000",3);
MAP.put("0B00009@0B0000",3);
MAP.put("0B000B0F000000",1);
MAP.put("0B00000>00000B",3);
MAP.put("0B00000E000000",3);
MAP.put("0B00009@00000B",3);
MAP.put("0B00000>0B0000",3);
MAP.put("0B000B09000000",3);
MAP.put("0B00000<0H0000",3);
MAP.put("0H00000>000000",3);
MAP.put("000H000<000B00",3);
MAP.put("000B000>000000",3);
MAP.put("00000B0G090000",3);
MAP.put("000B009>0B0000",3);
MAP.put("0B000B0<0B0000",3);
MAP.put("00000B0E0?0000",3);
MAP.put("0B000B0<00000B",3);
MAP.put("000B00B=000B00",3);
MAP.put("0H00000@000000",3);
MAP.put("0B0B090E000000",3);
MAP.put("000000G@000000",2);
MAP.put("000000B@000000",3);
MAP.put("000B000>0B0000",3);
MAP.put("00000J0<000000",2);
MAP.put("000H009>000000",3);
MAP.put("0H0B000<000000",3);
MAP.put("00000H9>000000",3);
MAP.put("0B000BB=000000",3);
MAP.put("0B0000BF000000",3);
MAP.put("000B000<0H0000",3);
MAP.put("000B0000000000",3);
MAP.put("00000B0<0B0000",3);
MAP.put("000B0B9@000000",3);
MAP.put("00000B9G000000",4);
MAP.put("00000B0?000000",3);
MAP.put("0B00000@0B0000",3);
MAP.put("0H00000F000000",3);
MAP.put("0B00000@00000B",3);
MAP.put("000H000>000000",3);
MAP.put("0B000009000B00",3);
MAP.put("0B0000B=00000B",2);
MAP.put("0B0000B=0B0000",3);
MAP.put("0B00000@000000",3);
MAP.put("00000B090B0000",3);
MAP.put("0B0B0009000000",3);
MAP.put("0B0000B@000000",3);
MAP.put("0B00009>000B00",3);
MAP.put("0000000?000000",3);
MAP.put("0000000B000000",3);
MAP.put("0H00000<000B00",3);
MAP.put("00000B09000000",3);
MAP.put("000B0B0E090000",0);
MAP.put("0B0B000<000000",3);
MAP.put("0H00009>000000",3);
MAP.put("0B00000F000B00",3);
MAP.put("000H090E000000",3);
MAP.put("0B00000<0B0000",3);
MAP.put("0B00000<00000B",3);
MAP.put("00000BE@000000",3);
MAP.put("00000B0E000000",4);
MAP.put("0B0B009>000000",3);
MAP.put("0B0B000<00000B",3);
MAP.put("0B00000<000H00",3);
MAP.put("00000B9>0B0000",3);
MAP.put("0B0B000<0B0000",3);
MAP.put("000B00090B0000",3);
MAP.put("00000BB@000000",3);
MAP.put("000B000@000000",3);
MAP.put("000B009@0B0000",3);
MAP.put("0H0000B=000000",4);
MAP.put("00000B00000000",3);
MAP.put("000B000@0B0000",3);
MAP.put("000B090E000B00",3);
MAP.put("000H0009000000",3);
MAP.put("000H000@000000",3);
MAP.put("000B00?>000000",3);
MAP.put("000B009G000000",2);
MAP.put("000B000<000B00",3);
MAP.put("0B0B000>000000",3);
MAP.put("000B0B0<000B00",3);
MAP.put("000B000?000000",3);
MAP.put("0H000B0<000000",3);
MAP.put("00000H0@000000",3);
MAP.put("00000B0>0B0000",3);
MAP.put("0B00000>000B00",3);
MAP.put("000B0H0<000000",3);
MAP.put("000B0B0@000000",3);
MAP.put("0B00009@000B00",3);
MAP.put("0B0000?@000000",3);
MAP.put("00000000000000",3);
MAP.put("0B000B0<000000",3);
MAP.put("00000HB=000000",3);
MAP.put("000H00B=000000",3);
MAP.put("000B0BB=000000",3);
MAP.put("000B0009000000",3);
MAP.put("00000B0>000000",3);
}
}
